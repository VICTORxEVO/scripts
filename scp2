#!/bin/bash

config_dir="$HOME/.config/scp2"
config_file="$config_dir/scp2.conf"

RED='\033[31m'
END='\033[0m'
GREEN='\033[32m'
YELLOW='\033[33m'
local_home="${HOME}"
input_lpath="Downloads"
input_vpath="SCP_DIR/*"
option=""

function is_valid_ip() 
{
    local ip=$1
    local valid_ip_regex='^([0-9]{1,3}\.){3}[0-9]{1,3}$'
	local res=0
    if [[ $ip =~ $valid_ip_regex ]];
	then
        IFS='.' read -r -a octets <<< "$ip"
        for octet in "${octets[@]}";
		do
            if (( octet < 0 || octet > 255 )); then
                res=1
				break
            fi
        done
    else
        res=1
    fi
	if [ $res -eq 1 ];
	then
		echo -e "scp2: ${RED}invalid ip address \"$ip\"${END}"
		exit 10
	fi
}

function update_ip() 
{
    local new_ip=$1
    sed -i "1s|.*|ip=\"$new_ip\"|" "$config_file"
}

function update_vmhome()
{
	local new_home=$1
	sed -i "2s|.*|vm_home=\"$new_home\"|" "$config_file"
}

function setup() 
{
	if [ ! -d "$config_dir" ];
	then
		mkdir -p "$config_dir"
	fi

	if [ ! -f "$config_file" ];
	then
		echo -e "${YELLOW}building config file...${END}"
		read -rp "Enter virtual machine ip address: " ip_read
		read -rp "Enter home path of virtual machine: " vmpath_read

		is_valid_ip "$ip_read"

		echo "ip=\"${ip_read}\"" > "$config_file"
		echo "vm_home=\"${vmpath_read}\"" >> "$config_file"
	fi
}

setup #program start from here

source "$config_file"
if [ -z "$ip" ] || [ -z "$vm_home" ];
then
	echo -e "scp2: ${RED}bad config file !!${END}"
	rm -f $config_file
	setup
	source "$config_file"
fi


vpath="${vm_home}/${input_vpath}"
lpath="${local_home}/${input_lpath}"

while getopts ":v:l:h:i:ra" opt; do
	case ${opt} in
	a)
		vpath="${vmpath}/Anime/*"
		break
		;;
	v)
		vpath="${vm_home}/${OPTARG}"
		;;
	l)
		input_lpath="$OPTARG"
		if [[ "$input_lpath" == /* ]];
		then
			lpath="${input_lpath}"
		elif [[ $input_lpath == .* ]];
		then
			lpath=$(realpath "$input_lpath")
		else
			lpath="${local_home}/${input_lpath}"
		fi

		if ! [ -d "$lpath" ];
		then
			echo -e "${YELLOW}path \"$lpath\" not found !${END}"
			exit 3;
		fi
		;;
	h)
		update_vmhome "$OPTARG"
		vm_home="$OPTARG"
		vpath="${vm_home}/${input_vpath}"
		;;
	i)
		is_valid_ip "$OPTARG"
		ip="$OPTARG"
		update_ip "$OPTARG"
		;;
	r)
		option="-r"
		;;
	\?)
		echo -e "${RED}invalid option \"-$OPTARG\"${END}"
		exit 1
		;;
	:)
		if [ $OPTARG == "r" ];
		then
			echo -e "scp2: ${YELLOW}usage: -r [local_home]${END}"
		elif [ $OPTARG == "i" ];
		then
			echo -e "scp2: usage: -i [__ip_address]"
		else
			echo -e "scp2: ${YELLOW}option \"-$OPTARG\" requires an argument !${END}"
		fi
		exit 2
		;;
	esac
done

shift $((OPTIND - 1))

is_valid_ip "$ip"
promot=$(basename "$vm_home")


echo -e "${GREEN}copying...$END"
echo -e "from\t\"${vpath}\"\n"
echo -en "to  \t\"${lpath}\""

if [ "$option" == "-r" ];
then
	echo " with option $option "
else
	echo -e "\n"
fi


scp ${option} "${promot}@${ip}:${vpath}" "${lpath}"
